{"$schema":"https://dataexplorer.azure.com/static/d/schema/60/dashboard.json","id":"4e8cb088-73e6-4a0f-93fe-a8d95f66e4f6","eTag":"49f13a71-8a93-40e4-b8fb-9b72a0b58b87","title":"Conversation Diagnostics - Preview","schema_version":"60","pagesNavWidth":274.0000305175781,"tiles":[{"id":"922c2983-549e-44fc-84aa-4e91717bb1b8","title":"Conversation State Flow","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":0,"y":21,"width":18,"height":9},"queryRef":{"kind":"query","queryId":"c616953d-0591-4408-9c1f-a0c31580c208"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"5328c1aa-225c-4975-83ca-e888b3aacf11","title":"Fallback Queue Routing","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":0,"y":0,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"0af0830b-8ef0-4ace-b6d6-f5fe0d617f9d"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"5635075d-bab5-4572-8845-8ed8634cd174","title":"Overflow Triggered for Conversations","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":9,"y":0,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"e4da85dc-277b-485d-8053-bbd5e3166422"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"3bed1bc9-58a8-475f-926c-d0a83fb95ae0","title":"Agents Rejected Conversation Multiple Times","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":0,"y":7,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"dd27b79e-ad04-474c-9004-8b787f0b53e4"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"23a1214d-8169-487b-a58d-1d28c3aad67f","title":"Agent Assignment Took Longer Than 2 Minutes","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":9,"y":7,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"ce25a52b-1f91-4141-9eb8-8352562e9552"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"62e91aee-90c0-4b52-b0fa-2ab9f6feb9a8","title":"Agent Handle Time Took Longer Than 5 Minutes","visualType":"table","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":9,"y":14,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"a04d99fb-0aa1-40ee-9d0f-b0bde2b7d4be"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"fe0593a6-655f-4e02-97fd-687e11479f1c","title":"Top 20 AgentIDs with high reject count","visualType":"bar","pageId":"24083b1f-cba8-4bfb-ac11-b956a385b0fb","layout":{"x":0,"y":14,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"314eb882-42a7-4adf-b832-e700c7a11fc8"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"legendLocation":"bottom","xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"selectedDataOnLoad":{"all":true,"limit":10},"dataPointsTooltip":{"all":false,"limit":1}}},{"id":"862eef4a-0bc4-489e-9993-72c57cef9ef8","title":"Route to queue details of selected workitem","visualType":"table","pageId":"613328a5-8aed-4f17-9efc-2185e5f31889","layout":{"x":0,"y":12,"width":23,"height":4},"queryRef":{"kind":"query","queryId":"b39ccf2b-df98-4e6a-8f19-5f8bd61811dc"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[]}},{"id":"cdd0f992-4182-4c11-b13d-7d0e9aca7b65","title":"Classification details of selected workitem","visualType":"table","pageId":"613328a5-8aed-4f17-9efc-2185e5f31889","layout":{"x":0,"y":7,"width":23,"height":5},"queryRef":{"kind":"query","queryId":"3d141bf4-f67e-4f72-a4a3-42b150653f9d"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[]}},{"id":"68d5e657-599f-4e00-b237-06cc2211477d","title":"Agent Assignment details of selected workitem","visualType":"table","pageId":"613328a5-8aed-4f17-9efc-2185e5f31889","layout":{"x":0,"y":16,"width":23,"height":5},"queryRef":{"kind":"query","queryId":"49d5aec8-c5b3-4680-a996-307b1709d394"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[],"colorRules":[]}},{"id":"d3f1ec13-73be-4aed-8ba0-48d30adb7355","title":"Incoming workitems in time range","visualType":"table","pageId":"613328a5-8aed-4f17-9efc-2185e5f31889","layout":{"x":0,"y":0,"width":14,"height":7},"queryRef":{"kind":"query","queryId":"a125dca8-e2b4-4e8b-ba18-2232951ec068"},"visualOptions":{"table__enableRenderLinks":true,"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[{"interaction":"column","property":"workItem","parameterId":"dfa58584-2ed6-4995-a6bd-6698f44354f6","disabled":false}],"drillthrough":[],"table__renderLinks":[],"colorRules":[]}},{"id":"c06c8818-d9c5-46c5-9f0a-b209d029cc89","title":"Timeline of selected workitem","visualType":"line","pageId":"613328a5-8aed-4f17-9efc-2185e5f31889","layout":{"x":14,"y":0,"width":9,"height":7},"queryRef":{"kind":"query","queryId":"e527a00c-8f2e-482c-b27a-5614bdb64852"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"Time (In seconds)","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":true,"legendLocation":"right","xColumnTitle":"","xColumn":"subscenarioIndexed","yColumns":["cumulativeTimeSpent"],"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}}],"baseQueries":[],"parameters":[{"kind":"duration","id":"ffb0c03e-88ea-4de1-a371-b8718400bee8","displayName":"Time range","description":"","beginVariableName":"_startTime","endVariableName":"_endTime","defaultValue":{"kind":"dynamic","count":1,"unit":"hours"},"showOnPages":{"kind":"all"}},{"kind":"string","selectionType":"freetext","id":"dfa58584-2ed6-4995-a6bd-6698f44354f6","displayName":"workitemID","variableName":"workitemID","description":"","defaultValue":{"kind":"all"},"showOnPages":{"kind":"selection","pageIds":["613328a5-8aed-4f17-9efc-2185e5f31889"]}}],"dataSources":[{"id":"5dcd886c-e898-4585-bdef-fbdce577cf08","kind":"manual-kusto","scopeId":"kusto","name":"<Provide-Database-Name>","clusterUri":"https://ade.applicationinsights.io/subscriptions/b5f743f3-19e1-4db8-8bce-933165c6313d","database":"[Your Database Name]"}],"pages":[{"name":"Conversation Diagnostics","id":"24083b1f-cba8-4bfb-ac11-b956a385b0fb"},{"name":"Unified Routing Diagnostics","id":"613328a5-8aed-4f17-9efc-2185e5f31889"}],"queries":[{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]), subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| where scenario == \"ConversationDiagnosticsScenario\"\n| where conversationId != \"\" and subscenario != \"\"\n| project timestamp, conversationId, subscenario\n| sort by timestamp asc\n| summarize make_list(subscenario) by conversationId\n| project conversationId, conversationFlow = strcat_array(list_subscenario, \" -> \")","id":"c616953d-0591-4408-9c1f-a0c31580c208","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]), \n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"]),\n         queueResult = parse_json(tostring(customDim[\"omnichannel.result\"])).DisplayName\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| where scenario == \"ConversationDiagnosticsScenario\"         \n| where subscenario == \"RouteToQueue\" and queueResult == \"Case Question Queue\" \n| project timestamp, conversationId, queueResult\n","id":"0af0830b-8ef0-4ace-b6d6-f5fe0d617f9d","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]),\n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| extend omnichannelAdditionalInfo = tostring((customDim[\"omnichannel.additional_info\"]))\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| where scenario == \"ConversationDiagnosticsScenario\"\n| where omnichannelAdditionalInfo contains \"OverflowTrigger\"\n| project timestamp, conversationId, subscenario, omnichannelAdditionalInfo\n//add queue, and action","id":"e4da85dc-277b-485d-8053-bbd5e3166422","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]), \n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"]),\n         agentId = tostring(customDim[\"omnichannel.target_agent.id\"]) // Extract agent ID from custom dimensions\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| where scenario == \"ConversationDiagnosticsScenario\"         \n| where subscenario == \"CSRRejected\"\n| summarize agentRejectionCount = count() by conversationId, agentId // Count rejections per agent per conversation\n| summarize rejectionCount = sum(agentRejectionCount), \n            agentRejectionDetails = make_list(pack('agentId', agentId, 'rejectionCount', agentRejectionCount)) \n    by conversationId // Aggregate results by conversation\n| where rejectionCount > 1 // Filter conversations with more than one rejection\n| project conversationId, rejectionCount, agentRejectionDetails\n\n\n\n\n\n//traces\n//| where timestamp >= _startTime and timestamp <= _endTime\n//| extend customDim = parse_json(customDimensions)\n//| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]), \n //        subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n//| where subscenario == \"AgentReject\"\n//| summarize rejectionCount = count() by conversationId\n//| where rejectionCount > 1\n//| project conversationId, rejectionCount\n\n//add agentid and for every agent can reject so the count of reject for every agentid\n//for example\n//fd29c594-8989-4582-8e4f-b9ea8acc3bc8, agent1, 2, \n//fd29c594-8989-4582-8e4f-b9ea8acc3bc8, agent2, 1,","id":"dd27b79e-ad04-474c-9004-8b787f0b53e4","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"// Extract relevant subscenarios\nlet subscenarios = traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]),\n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| where subscenario in (\"RouteToQueue\", \"CSRAccepted\")\n| project timestamp, conversationId, subscenario;\n// Find the latest RTQ before each AgentAccept\nlet latestRTQsBeforeAgentAccept = subscenarios\n| where subscenario == \"RouteToQueue\"\n| join kind=inner (\n    subscenarios\n    | where subscenario == \"CSRAccepted\"\n    | project agentAcceptTime = timestamp, conversationId\n) on conversationId\n| where timestamp < agentAcceptTime // Ensure RTQ is before AgentAccept\n| summarize latestRTQTime = max(timestamp) by conversationId, agentAcceptTime;\n// Calculate assignment time\nlatestRTQsBeforeAgentAccept\n| extend assignmentTime = agentAcceptTime - latestRTQTime\n| where assignmentTime > 2min\n| project conversationId, assignmentTime\n\n\n//| extend prevTimestamp = prev(timestamp), prevSubscenario = prev(subscenario)\n//| where prevSubscenario == \"RTQ\" and subscenario == \"AgentAccept\"\n//| extend assignmentTime = timestamp - prevTimestamp\n//| where assignmentTime > 2min\n//| project conversationId, assignmentTime\n\n//take the closest RTQ to the AgentAccept","id":"ce25a52b-1f91-4141-9eb8-8352562e9552","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]),\n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| where subscenario in (\"CSRAccepted\", \"CustomerEndedConversation\",\"CSREndedConversation\") \n| project timestamp, conversationId, subscenario\n| sort by conversationId, timestamp asc\n| extend prevTimestamp = prev(timestamp), prevSubscenario = prev(subscenario)\n| where prevSubscenario == \"CSRAccepted\" and (subscenario == \"CustomerEndedConversation\" or subscenario == \"CSREndedConversation\")\n| extend handleTime = timestamp - prevTimestamp\n| where handleTime > 5min\n| project conversationId, handleTime","id":"a04d99fb-0aa1-40ee-9d0f-b0bde2b7d4be","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces\n| where timestamp >= _startTime and timestamp <= _endTime\n| extend customDim = parse_json(customDimensions)\n| extend agentId = tostring(customDim[\"omnichannel.target_agent.id\"]), // Extract agent ID from custom dimensions\n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| where scenario == \"ConversationDiagnosticsScenario\"\n| where subscenario == \"CSRRejected\"\n| summarize totalRejections = count() by agentId // Count total rejections for each agent\n| sort by totalRejections desc // Sort by rejection count in descending order\n| top 20 by totalRejections // Select top 20 agents\n| project agentId, totalRejections // Project relevant columns\n\n","id":"314eb882-42a7-4adf-b832-e700c7a11fc8","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces  \n| extend customDim = parse_json(customDimensions)  \n| extend workItem = tostring(customDim[\"powerplatform.analytics.resource.id\"])  \n| extend subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])  \n| extend resultJson = parse_json(customDim[\"omnichannel.result\"])  \n| extend finalQueueId = tostring(resultJson.Id),  \n         finalQueueName = tostring(resultJson.DisplayName)  \n| extend routingError = tostring(customDim[\"omnichannel.description\"])  // Extract routing error message  \n| extend additionalInfoRaw = tostring(customDim[\"omnichannel.additional_info\"])  \n| extend additionalInfo = parse_json(additionalInfoRaw)  \n| extend ruleSetName = tostring(additionalInfo.RuleSetName),  \n         ruleHitPolicy = tostring(additionalInfo.RuleHitPolicy),  \n         rulesList = additionalInfo.RuleSetInfo  \n| mv-expand rules = rulesList to typeof(dynamic)  \n| extend ruleId = tostring(rules.RuleId),  \n         ruleStatus = tostring(rules.Status),  \n         ruleOrder = toint(rules.Order),  \n         ruleItem = tostring(rules.RuleItem),  \n         ruleCondition = tostring(rules.Condition),  \n         ruleOutputs = rules.Output  \n| mv-expand ruleOutputs to typeof(dynamic)  \n| extend outputQueueId = tostring(ruleOutputs.Id),  \n         outputQueueName = tostring(ruleOutputs.DisplayName)  \n| where workItem == workitemID  \n| where subscenario contains \"RouteToQueue\"  \n| project timestamp, workItem, subscenario, ruleSetName, ruleHitPolicy, ruleItem, ruleStatus, ruleOrder, ruleCondition, outputQueueName, outputQueueId,   routingError  \n| order by timestamp asc ","id":"b39ccf2b-df98-4e6a-8f19-5f8bd61811dc","usedVariables":["workitemID"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"traces  \n| extend customDim = parse_json(customDimensions)  \n| extend workItem = tostring(customDim[\"powerplatform.analytics.resource.id\"])  \n| extend subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])  \n| extend classificationResult = tostring(customDim[\"omnichannel.result\"])  // Extract classification result  \n| extend additionalInfoRaw = tostring(customDim[\"omnichannel.additional_info\"])  \n| extend additionalInfo = parse_json(additionalInfoRaw)  \n| extend ruleSetName = tostring(additionalInfo.RuleSetName),  \n         ruleHitPolicy = tostring(additionalInfo.RuleHitPolicy),  \n         rulesList = additionalInfo.RuleSetInfo  \n| mv-expand rules = rulesList to typeof(dynamic)  \n| extend ruleId = tostring(rules.RuleId),  \n         ruleStatus = tostring(rules.Status),  \n         ruleOrder = toint(rules.Order),  \n         ruleItem = tostring(rules.RuleItem),  \n         ruleCondition = tostring(rules.Condition),  \n         ruleOutput = tostring(rules.Output)  \n| where workItem == workitemID  // Replace with actual work item  \n| where subscenario contains \"Classification\"  \n| project timestamp, workItem, subscenario, ruleSetName, ruleHitPolicy, ruleItem, ruleStatus, ruleOrder, ruleCondition, ruleOutput, classificationResult  \n| order by timestamp asc  \n","id":"3d141bf4-f67e-4f72-a4a3-42b150653f9d","usedVariables":["workitemID"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"let targetWorkItem = workitemID;  \nlet presenceMapping = datatable(PresenceId: string, PresenceName: string)\n[\n    \"f523f628-c07a-e811-8162-000d3aa11f50\", \"Available\",\n    \"efdeb843-c07a-e811-8162-000d3aa11f50\", \"Busy\",\n    \"08971864-c07a-e811-8162-000d3aa11f50\", \"Busy DND\",\n    \"70139190-c07a-e811-8162-000d3aa11f50\", \"Offline\",\n    \"3dacae76-c07a-e811-8162-000d3aa11f50\", \"Away\"\n];\ntraces\n| extend customDim = parse_json(customDimensions)  \n| extend workItem = tostring(customDim[\"powerplatform.analytics.resource.id\"])  \n| where workItem == targetWorkItem  \n| extend subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])  \n| extend assignmentMethod = tostring(customDim[\"omnichannel.assignment.method\"])  \n| extend assignmentStatusRaw = tostring(customDim[\"omnichannel.assignment.status\"])  \n| extend assignmentStatus = iff(isnotempty(assignmentStatusRaw), parse_json(assignmentStatusRaw), dynamic({}))  \n| extend isAgentAssigned = tostring(assignmentStatus.IsAgentAssigned),\n         agentId = tostring(assignmentStatus.AgentDetails.AgentId),\n         aadUserId = tostring(assignmentStatus.AgentDetails.AadUserId),\n         agentCapacity = toint(assignmentStatus.AgentDetails.AvailableCapacity),\n         agentPresence = tostring(assignmentStatus.AgentDetails.CurrentPresence)  \n// Fetch Rule Sets from omnichannel.rule_sets\n| extend ruleSetsRaw = tostring(customDim[\"omnichannel.rule_sets\"])  \n| extend ruleSets = iff(isnotempty(ruleSetsRaw) and ruleSetsRaw != \"[]\", parse_json(ruleSetsRaw), dynamic([{}]))  \n| mv-expand rules = ruleSets to typeof(dynamic)  \n| extend ruleStatus = tostring(rules.Status),  \n         ruleOrder = toint(rules.Order),  \n         ruleItem = tostring(rules.RuleItem),  \n         ruleCondition = tostring(rules.Condition),  \n         ruleOutput = tostring(rules.Output),  \n         ruleOrderBy = tostring(rules.OrderBy)  \n| where subscenario in (\"NewWorkItemTrigger\", \"AgentAvailabilityTrigger\",\"AgentAssignment\",\"CSRAssignment\")  \n| join kind=leftouter presenceMapping on $left.agentPresence == $right.PresenceId\n| extend currentAgentPresence = iff(isnotempty(PresenceName), PresenceName, \"Unknown\") \n| project timestamp, workItem, subscenario, assignmentMethod, isAgentAssigned, agentId, agentCapacity, currentAgentPresence, ruleStatus, ruleOrder, ruleItem, ruleCondition, ruleOutput, ruleOrderBy  \n| order by timestamp asc  ","id":"49d5aec8-c5b3-4680-a996-307b1709d394","usedVariables":["workitemID"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"\n// Extract final identified queue from RTQ events\nlet FinalQueueMapping = materialize(\n    traces  \n    | where timestamp >= _startTime and timestamp <=_endTime  // Ensures _timeRange is used in a table\n    | extend customDim = parse_json(customDimensions)\n    | extend workItem = tostring(customDim[\"powerplatform.analytics.resource.id\"]), \n             subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"]),\n             queueInfoRaw = tostring(customDim[\"omnichannel.result\"])\n    | where subscenario == \"RouteToQueue\" and isnotempty(queueInfoRaw)\n    | extend queueInfo = parse_json(queueInfoRaw)\n    | project workItem, finalQueueId = tostring(queueInfo.Id), finalQueueName = tostring(queueInfo.DisplayName)\n    | summarize finalQueueId = any(finalQueueId), finalQueueName = any(finalQueueName) by workItem\n);\n\n// Main query to track conversation flow\ntraces  \n| where timestamp >= _startTime and timestamp <=_endTime\n| extend customDim = parse_json(customDimensions)\n| extend channelType = tostring(customDim[\"omnichannel.channel.type\"])\n| extend scenario = tostring(customDim[\"powerplatform.analytics.scenario\"])\n| extend workItem = tostring(customDim[\"powerplatform.analytics.resource.id\"]), \n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| where workItem !in (\"\", \"00000000-0000-0000-0000-000000000000\")\n      and scenario == \"ConversationDiagnosticsScenario\"\n| extend channelTypeForConversation = iff(subscenario == \"ConversationCreated\", channelType, \"\")\n| project timestamp, workItem, subscenario, channelTypeForConversation\n| sort by timestamp asc  \n| summarize \n    conversationFlow = make_list(subscenario), \n    lastUpdatedTime = max(timestamp),  \n    channelType = arg_max(channelTypeForConversation,timestamp)\n  by workItem\n| project \n    workItem, \n    lastUpdatedTime, \n    channelType,\n    conversationFlow = strcat_array(conversationFlow, \" -> \")\n| join kind=leftouter (FinalQueueMapping) on workItem  \n| project workItem, lastUpdatedTime, channelType, finalQueueName, conversationFlow\n| sort by lastUpdatedTime desc","id":"a125dca8-e2b4-4e8b-ba18-2232951ec068","usedVariables":["_endTime","_startTime"]},{"dataSource":{"kind":"inline","dataSourceId":"5dcd886c-e898-4585-bdef-fbdce577cf08"},"text":"let _conversationId = workitemID;\ntraces\n| extend customDim = parse_json(customDimensions)\n| extend conversationId = tostring(customDim[\"powerplatform.analytics.resource.id\"]),\n         subscenario = tostring(customDim[\"powerplatform.analytics.subscenario\"])\n| where conversationId == _conversationId and subscenario != \"\"\n| project timestamp, subscenario\n| order by timestamp asc\n| serialize\n| extend  prevSub = prev(subscenario)\n| extend occurrenceNumber =  1\n//| extend occurrenceNumber = row_cumsum(iif(prev(subscenario) == subscenario and subscenario != \"ConversationCreated\", 1, 0)) + 1\n| extend rNumber = row_number(0)\n| extend subscenarioIndexed = iif(subscenario == \"ConversationCreated\", subscenario, strcat(subscenario, \" \", tostring(rNumber)))  // No index for \"ConversationCreated\"\n| extend prevTimestamp = prev(timestamp)\n| extend timeSpent = iif(isnull(prevTimestamp), 0, datetime_diff('second', timestamp, prevTimestamp))\n| extend cumulativeTimeSpent = row_cumsum(timeSpent)  // Cumulative sum of time spent\n| project occurrenceNumber, subscenarioIndexed, timeSpent, cumulativeTimeSpent, prevSub, rNumber","id":"e527a00c-8f2e-482c-b27a-5614bdb64852","usedVariables":["workitemID"]}]}